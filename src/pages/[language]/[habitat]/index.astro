---
import Layout from '../../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const habitats = await getCollection('habitats');

  return habitats.map((habitat) => {
    const [slug, language] = habitat.id.split('/');
    return {
      params: { language, habitat: slug, slug },
      props: { habitat },
    };
  });
}
// 2. For your template, you can get the entry directly from the prop
const { habitat } = Astro.props;
const inhabitants = await getCollection('inhabitants', ({data: {habitat: {id}}}) => id === habitat.id);
---

<Layout title={habitat.data.name}>
  <a href='./about/'>
    <article>
      <header><h1 style='margin-block-end: 0;'>{habitat.data.name}</h1></header>
      <Image src={habitat.data.cover} alt={habitat.data.name} width={650} loading='eager' />
    </article>
  </a>
  <style>
    a {
      text-decoration: none;
      color: inherit;
    }

    hgroup {
      margin-block-end: 0;
    }

    img {
      width: 100%;
    }

    .inhabitants-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(330px, 1fr));
      gap: 1rem;
    }
  </style>
  <div class='inhabitants-list'>
    { inhabitants.map((inhabitant, index) => (
      <a href={`./${inhabitant.id.split('/')[0]}/`}>
        <article>
          <header>
            <hgroup>
              <h3>{ inhabitant.data.common_name }</h3>
              <h4>{ inhabitant.data.latin_name }</h4>
            </hgroup>
          </header>
          <Image src={inhabitant.data.cover} alt={inhabitant.data.common_name} width={300} height={200} loading={index < 4 ? 'eager' : 'lazy'} />
        </article>
      </a>
    ))}
  </div>
</Layout>
